<#
.SYNOPSIS
    Sample control for UniversalDashboard.
.DESCRIPTION
    Sample control function for UniversalDashboard. This function must have an ID and return a hash table.
.PARAMETER Id
    An id for the component default value will be generated by new-guid.
.EXAMPLE
    PS C:\> <example usage>
    Explanation of what the example does
.INPUTS
    Inputs (if any)
.OUTPUTS
    Output (if any)
.NOTES
    General notes
#>
function New-UDSelectDateTime {
    param(
        [Parameter()]
        [string]$Id = (New-Guid).ToString(),
        [Parameter()]
        [int]$TimeIntervals = 10,
        [Parameter()]
        [object]$OnChange,
        [Parameter()]
        [string]$Locale = "en-GB",
        [Parameter()]
        [bool]$ModalView = $false,
        [Parameter()]
        [bool]$Clearable = $true,
        [Parameter()]
        [bool]$WeekNumbers = $true,
        [Parameter()]
        [bool]$showPreviousMonths = $false,
        [Parameter()]
        [int]$monthsShown = 1,
        [Parameter()]
        [bool]$showTimeSelect = $true,
        [Parameter()]
        [string]$timeFormat = "HH:mm",
        [Parameter()]
        [string]$dateFormat = "MMMM d, yyyy h:mm aa"


    )

    End {

        if ($null -ne $OnChange) {
            if ($OnChange -is [scriptblock]) {
                $OnChange = New-UDEndpoint -Endpoint $OnChange -Id ($Id + "onChange")
            }
            elseif ($OnChange -isnot [UniversalDashboard.Models.Endpoint]) {
                throw "OnChange must be a script block or UDEndpoint."
            }
            $activeOnChange = "true"
        }

        @{
            # The AssetID of the main JS File
            assetId            = $AssetId
            # Tell UD this is a plugin
            isPlugin           = $true
            # This ID must be the same as the one used in the JavaScript to register the control with UD
            type               = "UD-SelectDateTime"
            # An ID is mandatory
            id                 = $Id

            # This is where you can put any other properties. They are passed to the React control's props
            # The keys are case-sensitive in JS.
            timeIntervals      = $TimeIntervals
            onChange           = $activeOnChange
            locale             = $Locale
            withPortal         = $ModalView
            isClearable        = $Clearable
            showWeekNumbers    = $WeekNumbers
            monthsShown        = $monthsShown
            showPreviousMonths = $showPreviousMonths
            showTimeSelect     = $showTimeSelect
            timeFormat         = $timeFormat
            dateFormat         = $dateFormat
        }

    }
}
